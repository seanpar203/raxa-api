// Code generated by ogen, DO NOT EDIT.

package oas

type BearerAuth struct {
	Token string
}

// GetToken returns the value of Token.
func (s *BearerAuth) GetToken() string {
	return s.Token
}

// SetToken sets the value of Token.
func (s *BearerAuth) SetToken(val string) {
	s.Token = val
}

// NewOptString returns new OptString with value set to v.
func NewOptString(v string) OptString {
	return OptString{
		Value: v,
		Set:   true,
	}
}

// OptString is optional string.
type OptString struct {
	Value string
	Set   bool
}

// IsSet returns true if OptString was set.
func (o OptString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptString) Reset() {
	var v string
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptString) SetTo(v string) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptString) Get() (v string, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptV1UsersMeUpdateReq returns new OptV1UsersMeUpdateReq with value set to v.
func NewOptV1UsersMeUpdateReq(v V1UsersMeUpdateReq) OptV1UsersMeUpdateReq {
	return OptV1UsersMeUpdateReq{
		Value: v,
		Set:   true,
	}
}

// OptV1UsersMeUpdateReq is optional V1UsersMeUpdateReq.
type OptV1UsersMeUpdateReq struct {
	Value V1UsersMeUpdateReq
	Set   bool
}

// IsSet returns true if OptV1UsersMeUpdateReq was set.
func (o OptV1UsersMeUpdateReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptV1UsersMeUpdateReq) Reset() {
	var v V1UsersMeUpdateReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptV1UsersMeUpdateReq) SetTo(v V1UsersMeUpdateReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptV1UsersMeUpdateReq) Get() (v V1UsersMeUpdateReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptV1UsersMeUpdateReq) Or(d V1UsersMeUpdateReq) V1UsersMeUpdateReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

type UUID string

type V1CreateUserResponse struct {
	AccessToken  UUID   `json:"access_token"`
	RefreshToken UUID   `json:"refresh_token"`
	User         V1User `json:"user"`
}

// GetAccessToken returns the value of AccessToken.
func (s *V1CreateUserResponse) GetAccessToken() UUID {
	return s.AccessToken
}

// GetRefreshToken returns the value of RefreshToken.
func (s *V1CreateUserResponse) GetRefreshToken() UUID {
	return s.RefreshToken
}

// GetUser returns the value of User.
func (s *V1CreateUserResponse) GetUser() V1User {
	return s.User
}

// SetAccessToken sets the value of AccessToken.
func (s *V1CreateUserResponse) SetAccessToken(val UUID) {
	s.AccessToken = val
}

// SetRefreshToken sets the value of RefreshToken.
func (s *V1CreateUserResponse) SetRefreshToken(val UUID) {
	s.RefreshToken = val
}

// SetUser sets the value of User.
func (s *V1CreateUserResponse) SetUser(val V1User) {
	s.User = val
}

func (*V1CreateUserResponse) v1UsersCreateRes() {}

type V1ErrorResponse struct {
	Message string `json:"message"`
}

// GetMessage returns the value of Message.
func (s *V1ErrorResponse) GetMessage() string {
	return s.Message
}

// SetMessage sets the value of Message.
func (s *V1ErrorResponse) SetMessage(val string) {
	s.Message = val
}

func (*V1ErrorResponse) v1UsersCreateRes()   {}
func (*V1ErrorResponse) v1UsersMeRes()       {}
func (*V1ErrorResponse) v1UsersMeUpdateRes() {}

// Ref: #/components/schemas/V1User
type V1User struct {
	ID    UUID   `json:"id"`
	Name  string `json:"name"`
	Email string `json:"email"`
}

// GetID returns the value of ID.
func (s *V1User) GetID() UUID {
	return s.ID
}

// GetName returns the value of Name.
func (s *V1User) GetName() string {
	return s.Name
}

// GetEmail returns the value of Email.
func (s *V1User) GetEmail() string {
	return s.Email
}

// SetID sets the value of ID.
func (s *V1User) SetID(val UUID) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *V1User) SetName(val string) {
	s.Name = val
}

// SetEmail sets the value of Email.
func (s *V1User) SetEmail(val string) {
	s.Email = val
}

func (*V1User) v1UsersMeRes()       {}
func (*V1User) v1UsersMeUpdateRes() {}

type V1UsersCreateReq struct {
	Email    string `json:"email"`
	Password string `json:"password"`
}

// GetEmail returns the value of Email.
func (s *V1UsersCreateReq) GetEmail() string {
	return s.Email
}

// GetPassword returns the value of Password.
func (s *V1UsersCreateReq) GetPassword() string {
	return s.Password
}

// SetEmail sets the value of Email.
func (s *V1UsersCreateReq) SetEmail(val string) {
	s.Email = val
}

// SetPassword sets the value of Password.
func (s *V1UsersCreateReq) SetPassword(val string) {
	s.Password = val
}

type V1UsersMeUpdateReq struct {
	Name OptString `json:"name"`
}

// GetName returns the value of Name.
func (s *V1UsersMeUpdateReq) GetName() OptString {
	return s.Name
}

// SetName sets the value of Name.
func (s *V1UsersMeUpdateReq) SetName(val OptString) {
	s.Name = val
}
